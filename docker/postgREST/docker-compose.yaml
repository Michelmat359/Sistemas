version: '3'
services:
  db:
    image: 'timescale/timescaledb:latest-pg12'
    container_name: 'zVisualManager-timescale-container'
    restart: always
    environment:
      - POSTGRES_DB=postgresBD
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgresPSW
    volumes:
      #- ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./timescale_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend:
    image: postgrest/postgrest
    ports:
      - "3000:3000"
    links:
      - db:db
    environment:
      PGRST_DB_URI: postgres://postgres:postgresPSW@db:5432/postgresBD
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: postgres #In production this role should not be the same as the one used for the connection
      PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
    depends_on:
      - db

#SWAGGER nos permite visualizar de forma grafica en el navegador la API generada. 
  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    expose:
      - "8080"
    environment:
      API_URL: http://127.0.0.1:3000/

volumes:
  timescale_data:
